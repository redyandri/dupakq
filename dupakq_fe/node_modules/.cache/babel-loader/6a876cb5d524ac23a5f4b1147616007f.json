{"ast":null,"code":"import _slicedToArray from \"/Users/anandri/PycharmProjects/dupakq/dupakq_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/anandri/PycharmProjects/dupakq/dupakq_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/anandri/PycharmProjects/dupakq/dupakq_fe/src/RGV.js\";\nimport Graph from 'react-vis-network-graph';\nimport React, { useState, memo } from \"react\";\nrequire('dotenv').config();\nvar API_URI = 'http://' + process.env.REACT_APP_API_HOST + ':' + process.env.REACT_APP_API_PORT;\nfunction RGV(_ref) {\n  var data = _ref.data;\n  console.log('graph data:', data);\n  tmp_graph = {\n    nodes: data.nodes,\n    edges: data.edges\n  };\n  setState(function (x) {\n    return _objectSpread({}, x, {\n      graph: tmp_graph\n    });\n  });\n  var _useState = useState({\n      counter: 5,\n      graph: {\n        nodes: data.nodes,\n        edges: data.edges\n      },\n      events: {\n        select: function select(_ref2) {\n          var nodes = _ref2.nodes,\n            edges = _ref2.edges;\n          console.log(\"Selected nodes:\" + nodes);\n          console.log(\"Selected edges:\" + edges);\n        },\n        selectEdge: function selectEdge(e) {\n          var nodes = e.nodes,\n            edges = e.edges;\n          if (edges.length >= 1) {\n            console.log('selectEdge:' + edges + '\\nNodes:' + nodes);\n          }\n        }\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var graph = state.graph,\n    events = state.events;\n  var options = {\n    layout: {\n      hierarchical: false\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    height: \"256px\"\n  };\n  return /*#__PURE__*/React.createElement(Graph, {\n    graph: graph,\n    options: options,\n    events: events,\n    style: {\n      height: \"250px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n}\nexport default memo(RGV);","map":{"version":3,"names":["Graph","React","useState","memo","require","config","API_URI","process","env","REACT_APP_API_HOST","REACT_APP_API_PORT","RGV","data","console","log","tmp_graph","nodes","edges","setState","x","graph","counter","events","select","selectEdge","e","length","state","options","layout","hierarchical","color","height"],"sources":["/Users/anandri/PycharmProjects/dupakq/dupakq_fe/src/RGV.js"],"sourcesContent":["import Graph from 'react-vis-network-graph';\nimport React, { useState,memo } from \"react\";\nrequire('dotenv').config()\n\nconst API_URI = 'http://' + process.env.REACT_APP_API_HOST + ':' + process.env.REACT_APP_API_PORT\n \n\nfunction RGV({data}) {\n  console.log('graph data:',data)\n  tmp_graph={nodes:data.nodes,edges:data.edges}\n  setState((x)=>  {return {...x,graph:tmp_graph}});\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: data.nodes,\n      edges: data.edges\n    },\n    events: {\n      select: ({ nodes, edges }) => {\n        console.log(\"Selected nodes:\"+nodes);\n        console.log(\"Selected edges:\"+edges);\n      },\n      selectEdge:(e)=>{\n        var {nodes,edges}=e;\n        if (edges.length>=1){\n          console.log('selectEdge:'+edges+'\\nNodes:'+nodes);\n        }\n      }\n    }\n  })\n  const { graph, events } = state;\n \n  const options = {\n    layout: {\n      hierarchical: false\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    height: \"256px\"\n  };\n \n  return (\n    <Graph \n    graph={graph} \n    options={options} \n    events={events} \n    style={{ height: \"250px\" }} \n    />\n  );\n}\n \nexport default memo(RGV);"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAACC,IAAI,QAAQ,OAAO;AAC5CC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAE1B,IAAMC,OAAO,GAAG,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAAG,GAAG,GAAGF,OAAO,CAACC,GAAG,CAACE,kBAAkB;AAGjG,SAASC,GAAG,OAAS;EAAA,IAAPC,IAAI,QAAJA,IAAI;EAChBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAACF,IAAI,CAAC;EAC/BG,SAAS,GAAC;IAACC,KAAK,EAACJ,IAAI,CAACI,KAAK;IAACC,KAAK,EAACL,IAAI,CAACK;EAAK,CAAC;EAC7CC,QAAQ,CAAC,UAACC,CAAC,EAAK;IAAC,yBAAWA,CAAC;MAACC,KAAK,EAACL;IAAS;EAAC,CAAC,CAAC;EAAC,gBAEvBb,QAAQ,CAAC;MACjCmB,OAAO,EAAE,CAAC;MACVD,KAAK,EAAE;QACLJ,KAAK,EAAEJ,IAAI,CAACI,KAAK;QACjBC,KAAK,EAAEL,IAAI,CAACK;MACd,CAAC;MACDK,MAAM,EAAE;QACNC,MAAM,EAAE,uBAAsB;UAAA,IAAnBP,KAAK,SAALA,KAAK;YAAEC,KAAK,SAALA,KAAK;UACrBJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAACE,KAAK,CAAC;UACpCH,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAACG,KAAK,CAAC;QACtC,CAAC;QACDO,UAAU,EAAC,oBAACC,CAAC,EAAG;UAAA,IACTT,KAAK,GAAQS,CAAC,CAAdT,KAAK;YAACC,KAAK,GAAEQ,CAAC,CAARR,KAAK;UAChB,IAAIA,KAAK,CAACS,MAAM,IAAE,CAAC,EAAC;YAClBb,OAAO,CAACC,GAAG,CAAC,aAAa,GAACG,KAAK,GAAC,UAAU,GAACD,KAAK,CAAC;UACnD;QACF;MACF;IACF,CAAC,CAAC;IAAA;IAlBKW,KAAK;IAAET,QAAQ;EAAA,IAmBdE,KAAK,GAAaO,KAAK,CAAvBP,KAAK;IAAEE,MAAM,GAAKK,KAAK,CAAhBL,MAAM;EAErB,IAAMM,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,YAAY,EAAE;IAChB,CAAC;IACDb,KAAK,EAAE;MACLc,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAE;EACV,CAAC;EAED,oBACE,oBAAC,KAAK;IACN,KAAK,EAAEZ,KAAM;IACb,OAAO,EAAEQ,OAAQ;IACjB,MAAM,EAAEN,MAAO;IACf,KAAK,EAAE;MAAEU,MAAM,EAAE;IAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzB;AAEN;AAEA,eAAe7B,IAAI,CAACQ,GAAG,CAAC"},"metadata":{},"sourceType":"module"}