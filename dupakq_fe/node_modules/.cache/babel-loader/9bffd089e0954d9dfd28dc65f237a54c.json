{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Neo4jProvider = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar login_1 = require(\"./components/login\");\nvar neo4j_context_1 = require(\"./neo4j.context\");\nvar driver_1 = require(\"./driver\");\nvar neo4j_config_interface_1 = require(\"./neo4j-config.interface\");\nexports.Neo4jProvider = function (props) {\n  var configFromStorage = window.localStorage ? JSON.parse(window.localStorage.getItem(neo4j_config_interface_1.LOCAL_STORAGE_KEY) || '{}') : {};\n  var _a = react_1.useState(true),\n    authenticating = _a[0],\n    setAuthenticating = _a[1];\n  var _b = react_1.useState(configFromStorage),\n    config = _b[0],\n    setConfig = _b[1];\n  var _c = react_1.useState(props.driver),\n    driver = _c[0],\n    setDriver = _c[1];\n  var _d = react_1.useState(),\n    error = _d[0],\n    setError = _d[1];\n  var _e = react_1.useState(props.database),\n    database = _e[0],\n    setDatabase = _e[1];\n  var updateConnection = function updateConnection(config) {\n    setConfig(config);\n    setDatabase(database);\n    setAuthenticating(true);\n    var newDriver = driver_1.createDriver(config.scheme, config.host, config.port, config.username, config.password);\n    newDriver.verifyConnectivity().then(function () {\n      setDriver(newDriver);\n      window.localStorage.setItem(neo4j_config_interface_1.LOCAL_STORAGE_KEY, JSON.stringify(config));\n    }).catch(function (e) {\n      return setError(e);\n    }).finally(function () {\n      return setAuthenticating(false);\n    });\n  };\n  react_1.useEffect(function () {\n    // Has Driver been Passed?\n    if (props.driver) {\n      props.driver.verifyConnectivity().catch(function (e) {\n        return setError(e);\n      }).finally(function () {\n        setDriver(props.driver);\n        setAuthenticating(false);\n      });\n    }\n    // Has a connection string been provided to the url?\n    else {\n      setAuthenticating(false);\n    }\n  }, [driver]);\n  // Test driver passed as a prop or url search params\n  react_1.useEffect(function () {\n    if (props.driver !== undefined) {\n      return;\n    }\n    var searchParams = new URLSearchParams(window.location.search);\n    // Attempt to connect from URL parameters\n    var urlScheme, urlHost, urlPort;\n    if (searchParams.has('url')) {\n      var url = searchParams.get('url');\n      var matches = url.match(/^((neo4j|bolt)((\\+s?(sc)?)?):\\/\\/)?([\\w.]+)(:([0-9]+))?$/);\n      if (matches) {\n        urlScheme = matches[2] || 'neo4j';\n        urlHost = matches[6];\n        urlPort = matches[8] || 7687;\n      }\n    }\n    if (urlScheme && urlHost && urlPort) {\n      // Build Credentials\n      var username = searchParams.get('user') || undefined;\n      var password = searchParams.get('pass') || undefined;\n      // Attempt to Connect\n      var config_1 = {\n        scheme: urlScheme || 'neo4j',\n        host: urlHost || 'localhost',\n        port: urlPort || 7687,\n        username: username,\n        password: password,\n        database: searchParams.get('database') || undefined\n      };\n      updateConnection(config_1);\n    }\n  }, [props.driver]);\n  // Wait for effect to verify driver connectivity\n  if (authenticating) {\n    return react_1.default.createElement(\"div\", {\n      className: \"authenticating\"\n    });\n  }\n  if (!driver) {\n    var title = props.title,\n      logo = props.logo,\n      details = props.details,\n      footer = props.footer;\n    return react_1.default.createElement(login_1.Login, __assign({\n      error: error,\n      title: title,\n      logo: logo,\n      details: details,\n      footer: footer,\n      scheme: config.scheme,\n      host: config.host,\n      port: config.port,\n      username: config.username,\n      password: config.password,\n      database: config.database,\n      showActive: props.showActive,\n      showHost: props.showHost,\n      showDatabase: props.showDatabase,\n      onSubmit: updateConnection\n    }, props));\n  }\n  return react_1.default.createElement(neo4j_context_1.Neo4jContext.Provider, {\n    value: {\n      driver: driver,\n      config: config,\n      database: database,\n      updateConnection: updateConnection,\n      setDatabase: setDatabase\n    }\n  }, props.children);\n};","map":null,"metadata":{},"sourceType":"script"}