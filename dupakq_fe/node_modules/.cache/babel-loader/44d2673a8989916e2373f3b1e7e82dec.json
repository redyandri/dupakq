{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringify = void 0;\nvar object_util_1 = require(\"./internal/object-util\");\n/**\n * Custom version on JSON.stringify that can handle values that normally don't support serialization, such as BigInt.\n * @private\n * @param val A JavaScript value, usually an object or array, to be converted.\n * @returns A JSON string representing the given value.\n */\nfunction stringify(val) {\n  return JSON.stringify(val, function (_, value) {\n    if ((0, object_util_1.isBrokenObject)(value)) {\n      return {\n        __isBrokenObject__: true,\n        __reason__: (0, object_util_1.getBrokenObjectReason)(value)\n      };\n    }\n    if (typeof value === 'bigint') {\n      return value + \"n\";\n    }\n    return value;\n  });\n}\nexports.stringify = stringify;","map":null,"metadata":{},"sourceType":"script"}