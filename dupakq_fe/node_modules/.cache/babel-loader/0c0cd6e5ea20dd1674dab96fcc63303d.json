{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBrokenObjectReason = exports.isBrokenObject = exports.createBrokenObject = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar __isBrokenObject__ = '__isBrokenObject__';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar __reason__ = '__reason__';\n/**\n * Creates a object on which all method calls will throw the given error\n *\n * @param {Error} error The error\n * @param {any} object The object. Default: {}\n * @returns {any} A broken object\n */\nfunction createBrokenObject(error, object) {\n  if (object === void 0) {\n    object = {};\n  }\n  var fail = function fail() {\n    throw error;\n  };\n  return new Proxy(object, {\n    get: function get(_, p) {\n      if (p === __isBrokenObject__) {\n        return true;\n      } else if (p === __reason__) {\n        return error;\n      } else if (p === 'toJSON') {\n        return undefined;\n      }\n      fail();\n    },\n    set: fail,\n    apply: fail,\n    construct: fail,\n    defineProperty: fail,\n    deleteProperty: fail,\n    getOwnPropertyDescriptor: fail,\n    getPrototypeOf: fail,\n    has: fail,\n    isExtensible: fail,\n    ownKeys: fail,\n    preventExtensions: fail,\n    setPrototypeOf: fail\n  });\n}\nexports.createBrokenObject = createBrokenObject;\n/**\n * Verifies if it is a Broken Object\n * @param {any} object The object\n * @returns {boolean} If it was created with createBrokenObject\n */\nfunction isBrokenObject(object) {\n  return object !== null && typeof object === 'object' && object[__isBrokenObject__] === true;\n}\nexports.isBrokenObject = isBrokenObject;\n/**\n * Returns if the reason the object is broken.\n *\n * This method should only be called with instances create with {@link createBrokenObject}\n *\n * @param {any} object The object\n * @returns {Error} The reason the object is broken\n */\nfunction getBrokenObjectReason(object) {\n  return object[__reason__];\n}\nexports.getBrokenObjectReason = getBrokenObjectReason;","map":null,"metadata":{},"sourceType":"script"}