{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginDesktop = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar form_items_1 = require(\"./form-items\");\nexports.LoginDesktop = function (_a) {\n  var classNames = _a.classNames,\n    showActive = _a.showActive,\n    hide = _a.hide,\n    onSubmit = _a.onSubmit;\n  var _b = react_1.useState(true),\n    loading = _b[0],\n    setLoading = _b[1];\n  var _c = react_1.useState([]),\n    projects = _c[0],\n    setProjects = _c[1];\n  var _d = react_1.useState(),\n    error = _d[0],\n    setError = _d[1];\n  var _e = react_1.useState({}),\n    project = _e[0],\n    setProject = _e[1];\n  var _f = react_1.useState(),\n    graph = _f[0],\n    setGraph = _f[1];\n  react_1.useEffect(function () {\n    // @ts-ignore\n    if (!window.neo4jDesktopApi) {\n      setLoading(false);\n      return;\n    }\n    // @ts-ignore\n    window.neo4jDesktopApi.getContext().then(function (context) {\n      var projects = context.projects.map(function (_a) {\n        var id = _a.id,\n          name = _a.name,\n          graphs = _a.graphs;\n        return {\n          id: id,\n          name: name,\n          graphs: graphs\n        };\n      });\n      setProjects(projects);\n      setProject(projects[0]);\n      setGraph(projects[0].graphs[0]);\n      setLoading(false);\n    });\n  }, []);\n  var handleProjectChange = function handleProjectChange(selected) {\n    setProject(selected.value);\n    setGraph(selected.value.graphs[0]);\n  };\n  var handleGraphChange = function handleGraphChange(selected) {\n    setGraph(selected.value);\n  };\n  var handleSubmit = function handleSubmit() {\n    if (!graph) return;\n    var _a = graph.connection.configuration.protocols.bolt,\n      url = _a.url,\n      host = _a.host,\n      port = _a.port,\n      username = _a.username,\n      password = _a.password;\n    var scheme = 'neo4j';\n    if (url.includes('://')) {\n      scheme = url.split('://')[0];\n    }\n    onSubmit({\n      scheme: scheme,\n      host: host,\n      port: port,\n      username: username,\n      password: password\n    });\n  };\n  var connectToActiveGraph = function connectToActiveGraph() {\n    var graphs = projects.reduce(function (state, project) {\n      return state.concat(project.graphs);\n    }, []);\n    var active = graphs.find(function (graph) {\n      return graph.status === 'ACTIVE';\n    });\n    if (!active) setError(new Error('There is no active graph.  Click the `Start` button on a Database in Neoj Desktop and try again.'));\n    var _a = active.connection.configuration.protocols.bolt,\n      host = _a.host,\n      port = _a.port,\n      username = _a.username,\n      password = _a.password;\n    var scheme = 'neo4j';\n    onSubmit({\n      scheme: scheme,\n      host: host,\n      port: port,\n      username: username,\n      password: password\n    });\n  };\n  if (loading) {\n    return react_1.default.createElement(\"div\", null);\n  }\n  // @ts-ignore\n  var graphs = (project === null || project === void 0 ? void 0 : project.graphs) && react_1.default.createElement(form_items_1.FormSelect, {\n    classNames: classNames,\n    id: \"graph\",\n    label: \"Graph\",\n    options: project === null || project === void 0 ? void 0 : project.graphs.map(function (value) {\n      return {\n        key: value.id,\n        text: value.name,\n        value: value\n      };\n    }),\n    value: graph,\n    setter: handleGraphChange\n  });\n  return react_1.default.createElement(\"div\", null, error && react_1.default.createElement(\"div\", {\n    className: classNames.formError\n  }, error.message), react_1.default.createElement(form_items_1.FormSelect, {\n    classNames: classNames,\n    id: \"project\",\n    label: \"Project\",\n    options: projects.map(function (value) {\n      return {\n        key: value.id,\n        text: value.name,\n        value: value\n      };\n    }),\n    value: project,\n    setter: handleProjectChange\n  }), graphs, react_1.default.createElement(\"div\", {\n    className: classNames.formButtons\n  }, project && graph && react_1.default.createElement(form_items_1.FormButton, {\n    text: \"Connect\",\n    className: classNames.formButtonPrimary,\n    onClick: handleSubmit\n  }), showActive && react_1.default.createElement(form_items_1.FormButton, {\n    text: \"Active Graph\",\n    className: classNames.formButtonSecondary,\n    onClick: connectToActiveGraph\n  })), react_1.default.createElement(\"div\", {\n    className: classNames.loginOtherDatabase\n  }, react_1.default.createElement(\"a\", {\n    onClick: function onClick() {\n      return hide();\n    }\n  }, \"Or connect to another graph\")));\n};","map":null,"metadata":{},"sourceType":"script"}