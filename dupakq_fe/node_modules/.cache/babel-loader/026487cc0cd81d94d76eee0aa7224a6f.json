{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLazyWriteCypher = exports.useLazyReadCypher = exports.useWriteCypher = exports.useReadCypher = exports.useCypher = void 0;\nvar react_1 = require(\"react\");\nvar neo4j_driver_1 = __importDefault(require(\"neo4j-driver\"));\nvar neo4j_context_1 = require(\"./neo4j.context\");\nexports.useCypher = function (defaultAccessMode, cypher, params, database) {\n  var _a = useLazyCypher(defaultAccessMode, cypher, database),\n    run = _a[0],\n    queryState = _a[1];\n  react_1.useEffect(function () {\n    run(params, database);\n  }, []);\n  return __assign({\n    run: run\n  }, queryState);\n};\nvar createSession = function createSession(driver, database, defaultAccessMode) {\n  if (database !== undefined && database !== '') {\n    return driver.session({\n      database: database,\n      defaultAccessMode: defaultAccessMode\n    });\n  }\n  return driver.session({\n    defaultAccessMode: defaultAccessMode\n  });\n};\nexports.useReadCypher = function (cypher, params, database) {\n  return exports.useCypher(neo4j_driver_1.default.session.READ, cypher, params, database);\n};\nexports.useWriteCypher = function (cypher, params, database) {\n  return exports.useCypher(neo4j_driver_1.default.session.WRITE, cypher, params, database);\n};\nexports.useLazyReadCypher = function (cypher, database) {\n  return useLazyCypher(neo4j_driver_1.default.session.READ, cypher, database);\n};\nexports.useLazyWriteCypher = function (cypher, database) {\n  return useLazyCypher(neo4j_driver_1.default.session.WRITE, cypher, database);\n};\nvar useLazyCypher = function useLazyCypher(defaultAccessMode, cypher, defaultDatabase) {\n  var _a = react_1.useContext(neo4j_context_1.Neo4jContext),\n    driver = _a.driver,\n    database = _a.database;\n  if (!driver) throw new Error('`driver` not defined in Neo4jContext. Have you added it into your app as <Neo4jProvider driver={{driver}}> ?');\n  var _b = react_1.useState({\n      loading: false,\n      database: database,\n      cypher: cypher\n    }),\n    queryState = _b[0],\n    setQueryState = _b[1];\n  var run = function run(params, anotherDatabase) {\n    var session = createSession(driver, anotherDatabase || defaultDatabase || database, defaultAccessMode);\n    setQueryState({\n      session: session,\n      loading: true,\n      database: anotherDatabase || defaultDatabase || database,\n      cypher: cypher\n    });\n    return session.run(cypher, params).then(function (result) {\n      setQueryState({\n        session: session,\n        cypher: cypher,\n        params: params,\n        database: anotherDatabase || defaultDatabase || database,\n        loading: false,\n        result: result,\n        records: result.records,\n        first: result.records[0]\n      });\n      session.close();\n      return result;\n    }).catch(function (error) {\n      setQueryState({\n        session: session,\n        cypher: cypher,\n        params: params,\n        database: anotherDatabase || defaultDatabase || database,\n        loading: false,\n        error: error\n      });\n      session.close();\n    });\n  };\n  return [run, __assign({\n    cypher: cypher,\n    database: database\n  }, queryState)];\n};","map":null,"metadata":{},"sourceType":"script"}